
// *** Do not edit this file, it is auto-generated ***

#include <cstddef>
#include "psddl_psana/jungfrau.ddl.h"
#include <iostream>
namespace Psana {
namespace Jungfrau {

ConfigV1::~ConfigV1() {}

std::ostream& operator<<(std::ostream& str, Jungfrau::ConfigV1::GainMode enval) {
  const char* val;
  switch (enval) {
  case Jungfrau::ConfigV1::Normal:
    val = "Normal";
    break;
  case Jungfrau::ConfigV1::FixedGain1:
    val = "FixedGain1";
    break;
  case Jungfrau::ConfigV1::FixedGain2:
    val = "FixedGain2";
    break;
  case Jungfrau::ConfigV1::ForcedGain1:
    val = "ForcedGain1";
    break;
  case Jungfrau::ConfigV1::ForcedGain2:
    val = "ForcedGain2";
    break;
  case Jungfrau::ConfigV1::HighGain0:
    val = "HighGain0";
    break;
  default:
    return str << "GainMode(" << int(enval) << ")";
  }
  return str << val;
}
std::ostream& operator<<(std::ostream& str, Jungfrau::ConfigV1::SpeedMode enval) {
  const char* val;
  switch (enval) {
  case Jungfrau::ConfigV1::Quarter:
    val = "Quarter";
    break;
  case Jungfrau::ConfigV1::Half:
    val = "Half";
    break;
  default:
    return str << "SpeedMode(" << int(enval) << ")";
  }
  return str << val;
}

ElementV1::~ElementV1() {}

} // namespace Jungfrau
} // namespace Psana
